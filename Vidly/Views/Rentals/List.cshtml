@model IEnumerable<Vidly.Models.Rental>

@{
    ViewBag.Title = "List";
}

<h2>Rentals</h2>

<p>
    @Html.ActionLink("New Rental", "New", "Rentals", null, new { @class = "btn btn-primary" })
</p>
<div class="row">
    <div class="col-md-4">
        Customer name:
        @Html.TextBox("CustomerName", "")
    </div>
    <div class="col-md-4">
        Movie name:
        @Html.TextBox("MovieName", "")
    </div>
    <div class="col-md-4">
        <button type="button" id="btnGetRentals">Filtrar en servidor(AJAX -> WEB API)</button>
    </div>
</div>
<br />
<table id="rentals" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Movie</th>
            <th>Date Rented</th>
            <th>Date Returned</th>
            <th></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>


@section scripts
{
    <script>
        function fillDatatable() {
            var CustomerName = $('#CustomerName').val();
            var MovieName = $('#MovieName').val();

            var table = $("#rentals").DataTable({
                bDestroy: true,
                ajax: {
                    url: "/api/rentals?customerName=" + CustomerName + "&movieName=" + MovieName,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "customer.name"
                    },
                    {
                        data: "movie.name"
                    },
                    {
                        data: "dateRented",
                        render: function (data) {
                            var date = new Date(data);
                            var month = date.getMonth() + 1;
                            return date.getDate() + "/" + (month.length > 1 ? month : "0" + month) + "/" + date.getFullYear();
                        }
                    },
                    {
                        data: "dateReturned",                        
                        render: function (data) {
                            if (data === null) return "";

                            var date = new Date(data);
                            var month = date.getMonth() + 1;
                            return date.getDate() + "/" + (month.length > 1 ? month : "0" + month) + "/" + date.getFullYear();
                        }
                    },
                    {
                        data: "id",
                        render: function (data, type, row, meta) {
                            if (row.dateReturned !== null) return "";

                            return "<button  class='btn-link js-markAsReturn' data-rental-id=" + data + ">Mark as returned</button>";
                        }
                    }
                ]
            });
        }

        $(document).ready(function () {

            fillDatatable();

            $("#rentals").on("click", ".js-markAsReturn", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to mark as returned this rental?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/rentals/" + button.attr("data-rental-id"),
                            method: "PUT",
                            success: function () {
                                //table.row(button.parents("tr")).remove().draw();
                                fillDatatable();
                            }
                        });
                    }
                })
            });


            $("#btnGetRentals").click(function () {
                fillDatatable();
            });
        });
    </script>
}

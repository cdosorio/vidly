@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}
@* Ejemplo de formulario con Javascript, sin Razor como los anteriores *@
<h2>New Rental Form</h2>

<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" data-rule-validCustomer="true" required name="customer" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" data-rule-atLeastOneMovie="true" name="movie" type="text" value="" class="form-control" />
        </div>
    </div>


    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
        

    <button class="btn btn-primary">Submit</button>

</form>
@section scripts
{
    @*Agrega el bundle para validacion*@
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            //ViewModel para el cliente. Será enviada a la API.
            var vm = {
                        movieIds: []
                    }; 

            //Customers - AUTOCOMPLETAR
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,                
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true

            }, {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.id;
                });


            //Movies - AUTOCOMPLETAR
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true

            }, {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                    //Limpiar textbox
                    $("#movie").typeahead("val", "");

                    //Agregar a viewModel para enviarla a server despues
                    vm.movieIds.push(movie.id);
                });
                       
            


            //Enviar a la API - validar con jQuery.

            //Custom validators (jquery busca los que comienzan con data-rule)
            
            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer");

            $.validator.addMethod("atLeastOneMovie", function () {                
                return vm.movieIds.length > 0;
            }, "Please select at least one movie");


            //Standar validators
            var validator = $("#newRental").validate({
                submitHandler: function () {                    
                    $.ajax({
                        url: "/api/Rentals",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Rentals successfully recorded.");

                            //Limpiar form
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            vm = { movieIds: [] };

                            //Resetea el form en términos de la validación
                            validator.resetForm();

                        })
                        .fail(function () {
                            toastr.success("Something unexpected happened.");
                        });

                    //previene que se envie el form
                    return false;
                } 
            });
                                               
        });
    </script>           
}
